@model GameViewModel;
@using M426_TicTacToe.Models.ViewModels;
@using M426_TicTacToe.Enums;
@{
    ViewData["Title"] = "Play";
}


<h1>@Model.Player1</h1>
<h1>@Model.Player2</h1>

<div class="GameBoard">
    @{
        for (int i = 0; i < 3; i++)
        {
            <div class="GameRow">
                @for (int j = 0; j < 3; j++)
                {
                    <div class="GameCell">
                        <button onclick="connection.invoke('ClickField', @Html.Raw("'" + Model.Id + "'"), @(i * 3 + j))" class="GameButton" id="@Html.Raw("btn" + (i * 3 + j))">
                            @switch (Model.Board[i * 3 + j])
                            {
                                case FieldState.player1:
                                    @Html.Raw("X")
                                    ;
                                    break;
                                case FieldState.player2:
                                    @Html.Raw("O")
                                    ;
                                    break;
                            }
                        </button>
                    </div>
                }
            </div>
        }
    }
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/signalr/ticTacToe.js"></script>